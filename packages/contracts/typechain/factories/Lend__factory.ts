/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Lend, LendInterface } from "../Lend";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC721",
        name: "_token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "principal",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "Mortgage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC721",
        name: "_token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "Payback",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "SetAdmin",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IERC721",
        name: "_token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "SetAllowedToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IERC721",
        name: "_token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "roi",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct Lend.TokenData",
        name: "price",
        type: "tuple",
      },
    ],
    name: "SetTokenData",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    name: "allowedToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currency",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_currency",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mortgage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "payback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "_token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setAllowedToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "_token",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "duration",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "roi",
            type: "uint256",
          },
        ],
        internalType: "struct Lend.TokenData",
        name: "_tokenData",
        type: "tuple",
      },
    ],
    name: "setTokenData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    name: "tokenData",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "roi",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600a60985534801561001557600080fd5b50611d2d806100256000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063756742f81161008c578063bb804a2b11610066578063bb804a2b146101ec578063c4d66de814610208578063e5a6b10f14610224578063f2fde38b14610242576100cf565b8063756742f8146101825780638aaa2284146101b25780638da5cb5b146101ce576100cf565b806327e45c2c146100d4578063313ce5671461010657806335ed8ab81461012457806343794dda146101405780634b0bddd21461015c578063715018a614610178575b600080fd5b6100ee60048036038101906100e991906113b1565b61025e565b6040516100fd93929190611814565b60405180910390f35b61010e610288565b60405161011b91906117f9565b60405180910390f35b61013e6004803603810190610139919061145e565b61028e565b005b61015a6004803603810190610155919061145e565b610659565b005b61017660048036038101906101719190611317565b6109cf565b005b610180610adf565b005b61019c600480360381019061019791906113b1565b610b67565b6040516101a99190611696565b60405180910390f35b6101cc60048036038101906101c791906113de565b610b87565b005b6101d6610cc3565b6040516101e3919061161b565b60405180910390f35b6102066004803603810190610201919061141e565b610ced565b005b610222600480360381019061021d9190611384565b610e33565b005b61022c610f09565b60405161023991906116b1565b60405180910390f35b61025c600480360381019061025791906112ea565b610f2f565b005b60996020528060005260406000206000915090508060000154908060010154908060020154905083565b609d5481565b600260665414156102d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cb9061179e565b60405180910390fd5b6002606681905550609a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035f9061177e565b60405180910390fd5b6000609c6000610376611027565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905060006127106064600a8460000151426104389190611962565b85602001516104479190611908565b6104519190611908565b61045b9190611908565b61046591906118d7565b82602001516104749190611881565b9050609b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd6104bc611027565b3084609960008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461050b9190611881565b6040518463ffffffff1660e01b815260040161052993929190611636565b602060405180830381600087803b15801561054357600080fd5b505af1158015610557573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057b9190611357565b508373ffffffffffffffffffffffffffffffffffffffff166323b872dd306105a1611027565b866040518463ffffffff1660e01b81526004016105c093929190611636565b600060405180830381600087803b1580156105da57600080fd5b505af11580156105ee573d6000803e3d6000fd5b505050506105fa611027565b73ffffffffffffffffffffffffffffffffffffffff167f5ba1512218d9e40ec4dcc334ae5852b698d67031c4e273f52b306ba3c5e0a46c858584604051610643939291906116cc565b60405180910390a2505060016066819055505050565b6002606654141561069f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106969061179e565b60405180910390fd5b6002606681905550609a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610733576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072a9061177e565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd610757611027565b30846040518463ffffffff1660e01b815260040161077793929190611636565b600060405180830381600087803b15801561079157600080fd5b505af11580156107a5573d6000803e3d6000fd5b505050506000609960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001549050604051806040016040528042815260200182815250609c6000610811611027565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000820151816000015560208201518160010155905050609b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd306108f7611027565b846040518463ffffffff1660e01b815260040161091693929190611636565b602060405180830381600087803b15801561093057600080fd5b505af1158015610944573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109689190611357565b50610971611027565b73ffffffffffffffffffffffffffffffffffffffff167f1876bf25d0368814d780735787a2aeafec1006dcc64f46844db0a8876d6901768484846040516109ba939291906116cc565b60405180910390a25060016066819055505050565b6109d7611027565b73ffffffffffffffffffffffffffffffffffffffff166109f5610cc3565b73ffffffffffffffffffffffffffffffffffffffff1614610a4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a429061175e565b60405180910390fd5b80606560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f55a5194bc0174fcaf12b2978bef43911466bf63b34db8d1dd1a0d5dcd5c41bea8282604051610ad392919061166d565b60405180910390a15050565b610ae7611027565b73ffffffffffffffffffffffffffffffffffffffff16610b05610cc3565b73ffffffffffffffffffffffffffffffffffffffff1614610b5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b529061175e565b60405180910390fd5b610b65600061102f565b565b609a6020528060005260406000206000915054906101000a900460ff1681565b60656000610b93611027565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610c1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c11906117be565b60405180910390fd5b80609a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fe589eb036e62c07e307aa4d441bd39c81e8bd86f349eaacb0caa06b1477f7f9a82604051610cb79190611696565b60405180910390a25050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60656000610cf9611027565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610d80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d77906117be565b60405180910390fd5b80609960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155604082015181600201559050508173ffffffffffffffffffffffffffffffffffffffff167fddf7a2009d6435d568d98175daa94a5afb998f93c53488cbe19ca7825d19996f82604051610e2791906117de565b60405180910390a25050565b6000610e3f60016110f5565b90508015610e63576001600060016101000a81548160ff0219169083151502179055505b6012609d8190555081609b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015610f055760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024986001604051610efc9190611703565b60405180910390a15b5050565b609b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610f37611027565b73ffffffffffffffffffffffffffffffffffffffff16610f55610cc3565b73ffffffffffffffffffffffffffffffffffffffff1614610fab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa29061175e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561101b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110129061171e565b60405180910390fd5b6110248161102f565b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008060019054906101000a900460ff161561116c5760018260ff161480156111245750611122306111e5565b155b611163576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115a9061173e565b60405180910390fd5b600090506111e0565b8160ff1660008054906101000a900460ff1660ff16106111c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b89061173e565b60405180910390fd5b816000806101000a81548160ff021916908360ff160217905550600190505b919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008135905061121781611c84565b92915050565b60008135905061122c81611c9b565b92915050565b60008151905061124181611c9b565b92915050565b60008135905061125681611cb2565b92915050565b60008135905061126b81611cc9565b92915050565b60006060828403121561128757611286611b27565b5b611291606061184b565b905060006112a1848285016112d5565b60008301525060206112b5848285016112d5565b60208301525060406112c9848285016112d5565b60408301525092915050565b6000813590506112e481611ce0565b92915050565b600060208284031215611300576112ff611b2c565b5b600061130e84828501611208565b91505092915050565b6000806040838503121561132e5761132d611b2c565b5b600061133c85828601611208565b925050602061134d8582860161121d565b9150509250929050565b60006020828403121561136d5761136c611b2c565b5b600061137b84828501611232565b91505092915050565b60006020828403121561139a57611399611b2c565b5b60006113a884828501611247565b91505092915050565b6000602082840312156113c7576113c6611b2c565b5b60006113d58482850161125c565b91505092915050565b600080604083850312156113f5576113f4611b2c565b5b60006114038582860161125c565b92505060206114148582860161121d565b9150509250929050565b6000806080838503121561143557611434611b2c565b5b60006114438582860161125c565b925050602061145485828601611271565b9150509250929050565b6000806040838503121561147557611474611b2c565b5b60006114838582860161125c565b9250506020611494858286016112d5565b9150509250929050565b6114a781611996565b82525050565b6114b6816119a8565b82525050565b6114c581611a0f565b82525050565b6114d481611a33565b82525050565b6114e381611a57565b82525050565b60006114f6602683611870565b915061150182611b42565b604082019050919050565b6000611519602e83611870565b915061152482611b91565b604082019050919050565b600061153c602083611870565b915061154782611be0565b602082019050919050565b600061155f601183611870565b915061156a82611c09565b602082019050919050565b6000611582601f83611870565b915061158d82611c32565b602082019050919050565b60006115a5600983611870565b91506115b082611c5b565b602082019050919050565b6060820160008201516115d160008501826115fd565b5060208201516115e460208501826115fd565b5060408201516115f760408501826115fd565b50505050565b611606816119f8565b82525050565b611615816119f8565b82525050565b6000602082019050611630600083018461149e565b92915050565b600060608201905061164b600083018661149e565b611658602083018561149e565b611665604083018461160c565b949350505050565b6000604082019050611682600083018561149e565b61168f60208301846114ad565b9392505050565b60006020820190506116ab60008301846114ad565b92915050565b60006020820190506116c660008301846114bc565b92915050565b60006060820190506116e160008301866114cb565b6116ee602083018561160c565b6116fb604083018461160c565b949350505050565b600060208201905061171860008301846114da565b92915050565b60006020820190508181036000830152611737816114e9565b9050919050565b600060208201905081810360008301526117578161150c565b9050919050565b600060208201905081810360008301526117778161152f565b9050919050565b6000602082019050818103600083015261179781611552565b9050919050565b600060208201905081810360008301526117b781611575565b9050919050565b600060208201905081810360008301526117d781611598565b9050919050565b60006060820190506117f360008301846115bb565b92915050565b600060208201905061180e600083018461160c565b92915050565b6000606082019050611829600083018661160c565b611836602083018561160c565b611843604083018461160c565b949350505050565b6000611855611866565b90506118618282611a69565b919050565b6000604051905090565b600082825260208201905092915050565b600061188c826119f8565b9150611897836119f8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156118cc576118cb611a9a565b5b828201905092915050565b60006118e2826119f8565b91506118ed836119f8565b9250826118fd576118fc611ac9565b5b828204905092915050565b6000611913826119f8565b915061191e836119f8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561195757611956611a9a565b5b828202905092915050565b600061196d826119f8565b9150611978836119f8565b92508282101561198b5761198a611a9a565b5b828203905092915050565b60006119a1826119d8565b9050919050565b60008115159050919050565b60006119bf82611996565b9050919050565b60006119d182611996565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000611a1a82611a21565b9050919050565b6000611a2c826119d8565b9050919050565b6000611a3e82611a45565b9050919050565b6000611a50826119d8565b9050919050565b6000611a6282611a02565b9050919050565b611a7282611b31565b810181811067ffffffffffffffff82111715611a9157611a90611af8565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f546f6b656e206e6f7420616c6c6f776564000000000000000000000000000000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b7f4e6f742061646d696e0000000000000000000000000000000000000000000000600082015250565b611c8d81611996565b8114611c9857600080fd5b50565b611ca4816119a8565b8114611caf57600080fd5b50565b611cbb816119b4565b8114611cc657600080fd5b50565b611cd2816119c6565b8114611cdd57600080fd5b50565b611ce9816119f8565b8114611cf457600080fd5b5056fea2646970667358221220ddf60cb214435050af243e87c8f2b9a975fefb9a88be11a8a19827488a9c00fe64736f6c63430008060033";

export class Lend__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Lend> {
    return super.deploy(overrides || {}) as Promise<Lend>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Lend {
    return super.attach(address) as Lend;
  }
  connect(signer: Signer): Lend__factory {
    return super.connect(signer) as Lend__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LendInterface {
    return new utils.Interface(_abi) as LendInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Lend {
    return new Contract(address, _abi, signerOrProvider) as Lend;
  }
}
