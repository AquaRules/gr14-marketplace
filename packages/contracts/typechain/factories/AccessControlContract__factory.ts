/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AccessControlContract,
  AccessControlContractInterface,
} from "../AccessControlContract";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "SetAdmin",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "admins",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061075e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063429b62e51461005c5780634b0bddd21461008c578063715018a6146100a85780638da5cb5b146100b2578063f2fde38b146100d0575b600080fd5b610076600480360381019061007191906104be565b6100ec565b60405161008391906105d3565b60405180910390f35b6100a660048036038101906100a191906104eb565b61010c565b005b6100b061021c565b005b6100ba6102a4565b6040516100c7919061058f565b60405180910390f35b6100ea60048036038101906100e591906104be565b6102ce565b005b60656020528060005260406000206000915054906101000a900460ff1681565b6101146103c6565b73ffffffffffffffffffffffffffffffffffffffff166101326102a4565b73ffffffffffffffffffffffffffffffffffffffff1614610188576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017f9061060e565b60405180910390fd5b80606560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f55a5194bc0174fcaf12b2978bef43911466bf63b34db8d1dd1a0d5dcd5c41bea82826040516102109291906105aa565b60405180910390a15050565b6102246103c6565b73ffffffffffffffffffffffffffffffffffffffff166102426102a4565b73ffffffffffffffffffffffffffffffffffffffff1614610298576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028f9061060e565b60405180910390fd5b6102a260006103ce565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102d66103c6565b73ffffffffffffffffffffffffffffffffffffffff166102f46102a4565b73ffffffffffffffffffffffffffffffffffffffff161461034a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103419061060e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b1906105ee565b60405180910390fd5b6103c3816103ce565b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000813590506104a3816106fa565b92915050565b6000813590506104b881610711565b92915050565b6000602082840312156104d4576104d361067d565b5b60006104e284828501610494565b91505092915050565b600080604083850312156105025761050161067d565b5b600061051085828601610494565b9250506020610521858286016104a9565b9150509250929050565b6105348161063f565b82525050565b61054381610651565b82525050565b600061055660268361062e565b915061056182610682565b604082019050919050565b600061057960208361062e565b9150610584826106d1565b602082019050919050565b60006020820190506105a4600083018461052b565b92915050565b60006040820190506105bf600083018561052b565b6105cc602083018461053a565b9392505050565b60006020820190506105e8600083018461053a565b92915050565b6000602082019050818103600083015261060781610549565b9050919050565b600060208201905081810360008301526106278161056c565b9050919050565b600082825260208201905092915050565b600061064a8261065d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6107038161063f565b811461070e57600080fd5b50565b61071a81610651565b811461072557600080fd5b5056fea264697066735822122085da4453421a83368a8d2a81adea08a01400386b0630260e47ca647621a9eb9464736f6c63430008060033";

export class AccessControlContract__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AccessControlContract> {
    return super.deploy(overrides || {}) as Promise<AccessControlContract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AccessControlContract {
    return super.attach(address) as AccessControlContract;
  }
  connect(signer: Signer): AccessControlContract__factory {
    return super.connect(signer) as AccessControlContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccessControlContractInterface {
    return new utils.Interface(_abi) as AccessControlContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccessControlContract {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AccessControlContract;
  }
}
