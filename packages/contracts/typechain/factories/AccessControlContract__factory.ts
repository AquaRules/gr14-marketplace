/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AccessControlContract,
  AccessControlContractInterface,
} from "../AccessControlContract";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "SetAdmin",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506106e8806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634b0bddd214610051578063715018a61461006d5780638da5cb5b14610077578063f2fde38b14610095575b600080fd5b61006b60048036038101906100669190610490565b6100b1565b005b6100756101c1565b005b61007f610249565b60405161008c9190610534565b60405180910390f35b6100af60048036038101906100aa9190610463565b610273565b005b6100b961036b565b73ffffffffffffffffffffffffffffffffffffffff166100d7610249565b73ffffffffffffffffffffffffffffffffffffffff161461012d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012490610598565b60405180910390fd5b80606560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f55a5194bc0174fcaf12b2978bef43911466bf63b34db8d1dd1a0d5dcd5c41bea82826040516101b592919061054f565b60405180910390a15050565b6101c961036b565b73ffffffffffffffffffffffffffffffffffffffff166101e7610249565b73ffffffffffffffffffffffffffffffffffffffff161461023d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023490610598565b60405180910390fd5b6102476000610373565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61027b61036b565b73ffffffffffffffffffffffffffffffffffffffff16610299610249565b73ffffffffffffffffffffffffffffffffffffffff16146102ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e690610598565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561035f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035690610578565b60405180910390fd5b61036881610373565b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061044881610684565b92915050565b60008135905061045d8161069b565b92915050565b60006020828403121561047957610478610607565b5b600061048784828501610439565b91505092915050565b600080604083850312156104a7576104a6610607565b5b60006104b585828601610439565b92505060206104c68582860161044e565b9150509250929050565b6104d9816105c9565b82525050565b6104e8816105db565b82525050565b60006104fb6026836105b8565b91506105068261060c565b604082019050919050565b600061051e6020836105b8565b91506105298261065b565b602082019050919050565b600060208201905061054960008301846104d0565b92915050565b600060408201905061056460008301856104d0565b61057160208301846104df565b9392505050565b60006020820190508181036000830152610591816104ee565b9050919050565b600060208201905081810360008301526105b181610511565b9050919050565b600082825260208201905092915050565b60006105d4826105e7565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b61068d816105c9565b811461069857600080fd5b50565b6106a4816105db565b81146106af57600080fd5b5056fea2646970667358221220668d90505b6cda4be9e70e3f47065cb68c26cf88c9ca1ad1582bec579e014bae64736f6c63430008060033";

export class AccessControlContract__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AccessControlContract> {
    return super.deploy(overrides || {}) as Promise<AccessControlContract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AccessControlContract {
    return super.attach(address) as AccessControlContract;
  }
  connect(signer: Signer): AccessControlContract__factory {
    return super.connect(signer) as AccessControlContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccessControlContractInterface {
    return new utils.Interface(_abi) as AccessControlContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccessControlContract {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AccessControlContract;
  }
}
